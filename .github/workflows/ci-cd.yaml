name: Wellness Center CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

services:
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090

jobs:
  unit-tests:
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wellness
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.23
    
    - name: Run tests
      run: |
        go test -v ./...

  integration-tests:
    needs: unit-tests
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2
    
    - name: Start services
      run: |
        docker network create wellness-net
        docker run -d --name redis --network wellness-net -p 6379:6379 redis:6
        docker run -d --name postgres \
          --network wellness-net \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=postgres \
          -e POSTGRES_DB=wellness \
          -p 5432:5432 \
          postgres:13
        docker run -d --name elasticsearch \
          --network wellness-net \
          -e discovery.type=single-node \
          -e xpack.security.enabled=false \
          -e bootstrap.memory_lock=true \
          -e "ES_JAVA_OPTS=-Xms512m -Xmx512m" \
          -p 9200:9200 \
          docker.elastic.co/elasticsearch/elasticsearch:8.13.0
        sleep 20 # Даем больше времени для инициализации Elasticsearch
    
    - name: Build and test
      run: |
        docker build -t wellness-app .
        docker run -d --name app \
          --network wellness-net \
          -p 8080:8080 \
          -e REDIS_HOST=redis:6379 \
          -e DB_HOST=postgres \
          -e DB_USER=postgres \
          -e DB_PASSWORD=postgres \
          -e DB_NAME=wellness \
          -e DB_PORT=5432 \
          -e ELASTICSEARCH_URL=http://elasticsearch:9200 \
          wellness-app
        sleep 10 # Увеличиваем время ожидания для инициализации
        curl --fail http://localhost:8080/api/v1/health
    
    - name: Cleanup
      if: always()
      run: |
        docker stop app redis postgres || true
        docker rm app redis postgres || true
        docker network rm wellness-net || true

env:
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  APP_ENV: ci